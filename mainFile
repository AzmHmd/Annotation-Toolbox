function varargout = PlantAnnotationToolbox(varargin)
% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
    'gui_Singleton',  gui_Singleton, ...
    'gui_OpeningFcn', @PlantAnnotationToolbox_OpeningFcn, ...
    'gui_OutputFcn',  @PlantAnnotationToolbox_OutputFcn, ...
    'gui_LayoutFcn',  [] , ...
    'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before PlantAnnotationToolbox is made visible.
function PlantAnnotationToolbox_OpeningFcn(hObject, eventdata, handles, varargin)
% Choose default command line output for PlantAnnotationToolbox
handles.output = hObject;
handles.label = 'Choose';
handles.imgnum = 1;
% Update handles structure
guidata(hObject, handles);



% --- Outputs from this function are returned to the command line.
function varargout = PlantAnnotationToolbox_OutputFcn(hObject, eventdata, handles)
varargout{1} = handles.output;


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
[handles.file handles.pathname] = uigetfile({'*.*'},...
    '/Users/azh2/Documents/Education/Aberystwyth/Gina');
handles.images = dir([handles.pathname,'*.png']);
fullpath = strcat(handles.pathname,handles.images(handles.imgnum).name);
if handles.imgnum <= length(handles.images)
    ppp = uipanel('Units','Pixels');
    set(ppp,'position',[45 45 520 400]);
    ax1 = axes('parent',ppp,'position',[0 0 1 1],'Units','normalized');
    img = imread(fullpath);
    hIm = imshow(img,'Parent',ax1);hold on;
    hSP = imscrollpanel(ppp,hIm);
    set(hSP,'Units','normalized',...
        'Position',[0 .1 1 .9])
    hMagBox = immagbox(ppp,hIm);
pos = get(hMagBox,'Position');
set(hMagBox,'Position',[0 0 pos(3) pos(4)])
imoverview(hIm)
else
    errordlg('No images found!')
end

handles.k = 1;handles.saved = 0;
guidata( hObject, handles );

% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
if strcmp(handles.label,'Choose')
    errordlg('Please define a proper label for your annotation!')
else
    img_name = handles.images(handles.imgnum).name;
    fid = fopen([handles.pathname,img_name(1:end-4),'_',handles.label,'.txt'],'w');
    fprintf(fid,[num2str(handles.x), '\n',num2str(handles.y)]);
    handles.saved = 1;
end
guidata( hObject, handles );



% --- Executes on button press in pushbutton3.
function pushbutton3_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
handles.imgnum = handles.imgnum +1;
if handles.imgnum <= length(handles.images)
    img_name = handles.images(handles.imgnum).name;
    fullpath = strcat(handles.pathname,img_name);
    ppp = uipanel('Units','Pixels');
    set(ppp,'position',[45 45 520 400]);
    ax1 = axes('parent',ppp,'position',[0 0 1 1],'Units','normalized');
    img = imread(fullpath);
    hIm = imshow(img,'Parent',ax1);
    hSP = imscrollpanel(ppp,hIm);
    set(hSP,'Units','normalized',...
        'Position',[0 .1 1 .9])
    handles.axes1 = ax1;
    
else
    errordlg('No images left.. You are done!')
end
guidata( hObject, handles );

% --- Executes on selection change in popupmenu1.
function popupmenu1_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns popupmenu1 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu1
items = get(hObject,'String');
index_selected = get(hObject,'Value');
item_selected = items{index_selected};
display(item_selected);
handles.label = item_selected;
display(handles.label)
if strcmp(handles.label,'Tip')
    while handles.saved == 0
    %[x,y] = getpts(handles.axes1);
    %[x,y] = ginput
%     set(handles.axes1,'XData',[get(handles.axes1,'XData') x(handles.k)], ...
%                          'YData',[get(handles.axes1,'YData') y(handles.k)], ...
%                          'MarkerEdgeColor', 'g');
axes(handles.axes1);
WindowButtonMotionFcn

x
y
plot(abs(y),abs(x),'*');

    handles.k=handles.k+1;
    end
elseif strcmp(handles.label,'Base')
    [x, y] = getpts(handles.axes1);
elseif strcmp(handles.label,'Stem')
    [x, y] = getpts(handles.axes1);
elseif strcmp(handles.label,'Body')
    [x, y] = getpts(handles.axes1);
end
handles.x = x';
handles.y = y';
guidata( hObject, handles );


% --- Executes during object creation, after setting all properties.
function popupmenu1_CreateFcn(hObject, eventdata, handles)
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton4.
function pushbutton4_Callback(hObject, eventdata, handles)
msgbox(['This ToolBox is created to label a plant different compartments.\n',...
'Use normal button clicks to add points.\n ',...
'A shift-, right-, or double-click adds a final point and ends the selection.\n',...
'Pressing Return or Enter ends the selection without adding a final point.\n',...
'Pressing Backspace or Delete removes the previously selected point. '])
